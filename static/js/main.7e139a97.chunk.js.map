{"version":3,"sources":["components/GamePanel.js","components/dialogs.js","App.js","reportWebVitals.js","index.js"],"names":["GamePanel","data","selectCell","className","map","index","value","selected","name","onClick","dialogs","App","useState","board","setBoard","victory","setVictory","bingoSelector","setBingoSelector","ref","useRef","useEffect","initialize","shuffle","splice","reduce","Array","fill","type","lifetime","config","spread","emoji","newBoard","length","j","current","rewardMe","i","every","val","isWinner","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e139a97.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst GamePanel = ({ data, selectCell }) => {\r\n  return (\r\n    <div className=\"game-board\">\r\n      {data.map(({ value, selected }, index) => (\r\n        <button\r\n          key={`${value}-${selected}`}\r\n          name={`${value}-${selected}`}\r\n          className={`cell ${selected ? \"selected\" : \"\"}`}\r\n          onClick={() => selectCell(index)}\r\n        >\r\n          <span className=\"number\">{index + 0}</span>\r\n          <span>{value}</span>\r\n        </button>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\nexport default GamePanel;\r\n","const dialogs = [\r\n\" Eat, drink and be scary!\",\r\n\"Ghostly Greetings!\",\r\n\"Halloween is a real treat\",\r\n\"Have a fang-tastic night\",\r\n\"Happy Haunting!\",\r\n\"Have a bootiful Halloween\",\r\n\"Don’t be a scaredy cat\",\r\n\"I witch you a Happy Halloween\",\r\n\"Stop in for a spell\",\r\n\"Please park all brooms at the door\",\r\n\"Caution! Witch Crossing\",\r\n\"Boo to you from our crew\",\r\n\"If you want a tasty sweet…\",\r\n\"Be sure to holler trick or treat!\",\r\n\"Knock! Knock!\",\r\n\"Who’s there?\",\r\n\"Vampires Drive Me Batty\",\r\n\"Don’t Make Me Flip My Witch Switch\",\r\n\"Zombies Love a Girl With Brains\",\r\n\"If You’ve Got It, Haunt It\",\r\n\"Witch Way to the Candy?\",\r\n\"Ghouls Just Want to Have Fun\",\r\n\"Join Our Coven\",\r\n\"It’s All About the Candy\",\r\n  ];\r\n  export default dialogs;\r\n","import React, { useState, useEffect, useRef } from \"react\";\nimport shuffle from \"shuffle-array\";\nimport GamePanel from \"./components/GamePanel\";\nimport Reward from \"react-rewards\";\nimport dialogs from \"./components/dialogs\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [board, setBoard] = useState([]);\n  const [victory, setVictory] = useState(false);\n  const [bingoSelector, setBingoSelector] = useState([]);\n\n  const ref = useRef(null);\n\n  useEffect(() => {\n    initialize();\n  }, []);\n\n  const initialize = () => {\n    let data = shuffle(dialogs);\n    data = [...[...data].splice(0, 12), `BINGO 😈`, ...[...data].splice(12)];\n    data = data.reduce(\n      (data, value, index) => [\n        ...data,\n        { value, selected: index !== 12 ? false : true },\n      ],\n      []\n    );\n    setBoard(data);\n    setBingoSelector(new Array(12).fill(false));\n    setVictory(false);\n  };\n\n  const isWinner = () => {\n    // console.log(bingoSelector);\n    if (!board.length) return;\n\n    //Select diagonal with bingoSelector 10\n    if (!bingoSelector[10]) {\n      let j = 0;\n      while (j <= 24 && board[j].selected) {\n        j += 6;\n      }\n      if (j === 30) {\n        bingoSelector[10] = true;\n        ref.current.rewardMe();\n      }\n    }\n    //Select diagonal with bingoSelector 11\n    if (!bingoSelector[11]) {\n      let j = 4;\n      while (j <= 20 && board[j].selected) {\n        j += 4;\n      }\n      if (j === 24) {\n        bingoSelector[11] = true;\n        ref.current.rewardMe();\n      }\n    }\n\n    for (let i = 0; i < 5; i++) {\n      //Select from column\n      if (!bingoSelector[i + 5]) {\n        let j = i;\n        while (j <= i + 20 && board[j].selected) {\n          j += 5;\n        }\n        if (j === i + 25) {\n          bingoSelector[i + 5] = true;\n          ref.current.rewardMe();\n        }\n      }\n      //Select from row\n      if (!bingoSelector[i]) {\n        let j = i * 5;\n        while (j <= i * 5 + 4 && board[j].selected) {\n          j++;\n        }\n        if (j === i * 5 + 5) {\n          bingoSelector[i] = true;\n          ref.current.rewardMe();\n        }\n      }\n    }\n    //Set Victory \"you won\"\n    if (board.every((val) => val.selected === true)) {\n      setVictory(true);\n    }\n  };\n\n  const selectCell = (index) => {\n    // if (gameWon) return;\n    let newBoard = [...board];\n    newBoard[index].selected = index !== 12 ? !board[index].selected : true;\n    setBoard(newBoard);\n    isWinner();\n  };\n\n  return (\n    <div className=\"container\">\n      <Reward\n        ref={ref}\n        type=\"emoji\"\n        lifetime={500}\n        config={{\n          spread: 150,\n          emoji: [\"🎃\", \"🍬\", \"🍭\", \"🎃\", \"🍬\", \"🍭\", \"🎃\", \"🕸️\"],\n        }}\n      ></Reward>\n\n      {victory ? (\n        <h1 className=\"header\">You won 🎃 🎃 🎃</h1>\n      ) : (\n        <h1 className=\"header\">Halloween BINGO</h1>\n      )}\n      <GamePanel data={board} selectCell={selectCell} />\n\n      <button className=\"reload\" onClick={initialize}>\n        Reload Game\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}